@page "/authors/"
@inject IClient httpClient
@inject IAuthorService authorService

<h3>Index</h3>

@if (false == response.Success)
{
    <div class="alert alert-info">
        <h4>@response.Message</h4>
    </div>
}

@if (null == Authors)
{
    <div class="alert alert-info">
        <h4>Loading Data...</h4>
    </div>
}
else
{
    <a class="btn btn-primary" href="/authors/create"><span class="oi oi-plus"></span>Create </a>
    <br />
    <table class="table table-responsive">
        <thead>
            <tr>
                <th>First name</th>
                <th>Last name</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var author in Authors)
            {
                <tr>
                    <td>@author.FirstName</td>
                    <td>@author.LastName</td>
                    <td>
                        <a class="btn btn-primary" href="/authors/details"><span class="oi oi-book">  </span>Details </a>
                        <a class="btn btn-warning" href="/authors/update/@author.Id"><span class="oi oi-pencil">  </span>Edit </a>
                        <a class="btn btn-danger" href="/authors/delete"><span class="oi oi-delete">  </span>Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@code {
    private List<AuthorReadOnlyDto> Authors;
    private Response<List<AuthorReadOnlyDto>> response = new Response<List<AuthorReadOnlyDto>>() { Success = true };
    protected override async Task OnInitializedAsync()
    {
        response = await authorService.GetAuthors();
        if (response.Success)
        {
            Authors = response.Data;
        }
    }

}
