@page "/users/register"
@using BookStoreApp.Blazor.Server.UI.Services.Base
@inject IClient httpClient
@inject NavigationManager navManger
<h3>Register new account</h3>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger">
        <p>
            @message
        </p>
    </div>
}
<div class="card-body">
    <EditForm Model="RegistrationModel" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Firstname</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.FirstName" />
            <ValidationMessage For="@(()=> RegistrationModel.FirstName)" />
        </div>
        <div class="form-group">
            <label for="email">Lastname</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.LastName" />
            <ValidationMessage For="@(()=> RegistrationModel.LastName)" />
        </div>
        <div class="form-group">
            <label for="email">Email Address</label>
            <InputText class="form-control" @bind-Value="RegistrationModel.Email" />
            <ValidationMessage For="@(()=> RegistrationModel.Email)" />
        </div>
        <div class="form-group">
            <label for="email">Password</label>
            <InputText class="form-control" type="password" @bind-Value="RegistrationModel.Password" />
            <ValidationMessage For="@(()=> RegistrationModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Register</button>
    </EditForm>
</div>


@code {
    UserDto RegistrationModel = new UserDto
        {
            Role = "User"
        };
    string message = String.Empty;

    private async Task HandleRegistration()
    {
        try
        {
            await httpClient.RegisterAsync(RegistrationModel);
            NavigateToLogin();
        }
        catch (ApiException ex)
        {
            if (ex.StatusCode >= 200 && ex.StatusCode <= 299)
            {
                NavigateToLogin();
            }
            message = ex.Response;
        }
    }

    private void NavigateToLogin()
    {
        navManger.NavigateTo("/users/login");
    }

}
